services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:3000:3000"  # Bind với tất cả interfaces
    depends_on:
      - kong
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    networks:
      - ecommerce-network

  userservice:
    build:
      context: ./services/userservice
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:3001:3001"  # Bind với tất cả interfaces
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
    env_file:
      - ./services/userservice/.env
    restart: unless-stopped
    networks:
      - ecommerce-network

  productservice:
    build:
      context: ./services/productservice
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:3002:3002"  # Bind với tất cả interfaces
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
    env_file:
      - ./services/productservice/.env
    restart: unless-stopped
    networks:
      - ecommerce-network

  cartservice:
    build:
      context: ./services/cartservice
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:3003:3003"  # Bind với tất cả interfaces
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
    env_file:
      - ./services/cartservice/.env
    restart: unless-stopped
    networks:
      - ecommerce-network

  orderservice:
    build:
      context: ./services/orderservice
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:3004:3004"  # Bind với tất cả interfaces
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
    env_file:
      - ./services/orderservice/.env
    restart: unless-stopped
    networks:
      - ecommerce-network

  kong:
    image: kong:latest
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
    ports:
      - "0.0.0.0:8000:8000"  # Bind với tất cả interfaces
      - "0.0.0.0:8001:8001"  # Bind với tất cả interfaces
    volumes:
      - ./kong.yml:/kong/declarative/kong.yml
    restart: unless-stopped
    networks:
      - ecommerce-network

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ecommerce
    # Không expose port ra ngoài - chỉ các container khác truy cập được
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ecommerce-network

  redis:
    image: redis:latest
    # Không expose port ra ngoài - chỉ các container khác truy cập được
    restart: unless-stopped
    networks:
      - ecommerce-network

volumes:
  pgdata:

networks:
  ecommerce-network:
    driver: bridge